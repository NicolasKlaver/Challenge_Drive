GUI_TKINTER:
__init__(db)
	- self.driveAPI = GoogleDriveAPI()
	- self.driveINV = GoogleDriveInventory(self.db, self.driveAPI)
	- self.db=db
--> EMPEZAR BOTON: 1ra Parte
	--> Connect to Google Drive (google_DriveAPI)
	--> Open connection to Database (google_Database)
	--> Crear y Seleccionar Database (google_Database)
	--> Obtengo el owner (google_DriveAPI)
		--> Creo la Tabla de la Database (google_Database)
		--> Creo la Tabla de la Database (google_Database)

--> CARTEL: Desea continuar con la bajada de archivos: 2da Parte
	--> Handler Files (google_DriveInventory)
___________________________________________________________________________________
DriveAPI:
--> Pedido de conectarse:
	--> Authenticate to Google API		
	--> Connect to API
--> Pedido de Owner:
	--> get_Authenticated_user

--> Pedido de Files:
	--> Devuelve los Files
___________________________________________________________________________________
Drive_Inventory:
__init__(drive_api, db):
	- self.drive_api= drive_api
	- self.db= db

--> Pedido de HandlerFiles: 1ra Parte
	--> Get Files (DriveAPI)
	--> Inventory Files: Analizamos archivo a archivo
		--> Recorremos la lista y separamos los datos.
		--> Agregamos el dato si was_public

--> Rutina de Comparacion: 2da Parte
	--> Comprobar que NO este en la Database (consulta a google_Database)
		--> Insertar_Archivo_DB (envio a google_Database)
		--> Chequear el campo file_was_public 
			--> Insertar_Historico (envio a google_Database)

	--> Si ESTA en la Database chequeo el file_visibility 
		--> Si alguien lo cambio: handler_visibility
			--> Remuevo la Visibility del Drive (google_Drive_API)
			--> Obtengo la hora de ultima modificacion (google_Drive_API)
			--> Update la tabla_inv (was_public=1, file_visibility= privado, last_modified) (google_Database)
			--> Agregar a Tabla_Historico si NO esta (google_Database)
			--> Enviar email al Owner (google_Email)
	
	--> Si ESTA en la Database y ya es privado --> Me fijo si fue modificado
		--> handler_last_modified
			--> Consulto la fecha en la Database con la actual (google_Database)
				--> Update la fecha (google_Database)
			--> Nada

--> CARTEL: Ya se agregaron los archivos a la Database y bla bla bla, pulse OK ahora pasan cambiar los archivos Publicos a Privado
___________________________________________________________________________________
Database:
__init__(self, user, password, host)
	- Conexiones
	- Tablas

--> Pedido de Conexion: 1ra Parte
	--> open_connection()
	--> create_database()
	--> select_database
	--> create_tablas_inv/hist

--> 2da Parte
___________________________________________________________________________________

